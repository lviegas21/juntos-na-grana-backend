package com.noxius.juntosnagrana.domain;

import static com.noxius.juntosnagrana.domain.AssertUtils.zonedDataTimeSameInstant;
import static org.assertj.core.api.Assertions.assertThat;

public class MissionStatusRecordAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMissionStatusRecordAllPropertiesEquals(MissionStatusRecord expected, MissionStatusRecord actual) {
        assertMissionStatusRecordAutoGeneratedPropertiesEquals(expected, actual);
        assertMissionStatusRecordAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMissionStatusRecordAllUpdatablePropertiesEquals(MissionStatusRecord expected, MissionStatusRecord actual) {
        assertMissionStatusRecordUpdatableFieldsEquals(expected, actual);
        assertMissionStatusRecordUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMissionStatusRecordAutoGeneratedPropertiesEquals(MissionStatusRecord expected, MissionStatusRecord actual) {
        assertThat(actual)
            .as("Verify MissionStatusRecord auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMissionStatusRecordUpdatableFieldsEquals(MissionStatusRecord expected, MissionStatusRecord actual) {
        assertThat(actual)
            .as("Verify MissionStatusRecord relevant properties")
            .satisfies(a -> assertThat(a.getDate()).as("check date").usingComparator(zonedDataTimeSameInstant).isEqualTo(expected.getDate())
            )
            .satisfies(a -> assertThat(a.getStatusType()).as("check statusType").isEqualTo(expected.getStatusType()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMissionStatusRecordUpdatableRelationshipsEquals(MissionStatusRecord expected, MissionStatusRecord actual) {
        assertThat(actual)
            .as("Verify MissionStatusRecord relationships")
            .satisfies(a -> assertThat(a.getMission()).as("check mission").isEqualTo(expected.getMission()));
    }
}

package com.noxius.juntosnagrana.domain;

import static com.noxius.juntosnagrana.domain.AssertUtils.zonedDataTimeSameInstant;
import static org.assertj.core.api.Assertions.assertThat;

public class FamilyAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFamilyAllPropertiesEquals(Family expected, Family actual) {
        assertFamilyAutoGeneratedPropertiesEquals(expected, actual);
        assertFamilyAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFamilyAllUpdatablePropertiesEquals(Family expected, Family actual) {
        assertFamilyUpdatableFieldsEquals(expected, actual);
        assertFamilyUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFamilyAutoGeneratedPropertiesEquals(Family expected, Family actual) {
        assertThat(actual)
            .as("Verify Family auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFamilyUpdatableFieldsEquals(Family expected, Family actual) {
        assertThat(actual)
            .as("Verify Family relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a ->
                assertThat(a.getCreatedAt())
                    .as("check createdAt")
                    .usingComparator(zonedDataTimeSameInstant)
                    .isEqualTo(expected.getCreatedAt())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFamilyUpdatableRelationshipsEquals(Family expected, Family actual) {
        // empty method
    }
}
